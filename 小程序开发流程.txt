
# 起步

- ### 申请账号：

	登录微信公众平台，进行账号注册，根据提示一步步地填入相关信息

	- 个人
	
		个人只能申请一个 `appid`，一个 `appid` 对应一个小程序。
		
	- 企业
		除了个体工商户申请5个 `appid` 外，其它类型的企业账号都可以申请 50 个 `appid`。即50个小程序。
		企业认证时需要输入15位营业执照注册号或18位的统一社会信用代码，还需要用绑定了管理员本人银行卡的微信扫描二维码，
		用来验证管理员的身份。认证方式有两种。
		
		|项目|小额打款验证|微信认证|
		|----|----|-----|
		|审核费用|/|300元/年|
		|审核时间|1-3个工作日|1-5个工作日|
		|微信支付申请|无|有|
		|可绑定开发者数量| 10个|20个|
		
		如果做展示型小程序，可以选择小额打款验证，省下300元审核费用；

		如果涉及到交易，直接选择微信认证，通过微信认证的小程序可以使用更多功能，应用场景更加多样。
		
		

- ### 安装开发工具：
	前往 开发者工具下载页面 ，根据自己的操作系统下载对应的安装包进行
安装，有关开发者工具更详细的介绍可以查看 《开发者工具介绍》 。

- ### 创建第一个小程序：
	选择创建路径，填入申请好的appid。创建快速启动模板，即可进入小程序的开发之中。


# 编写程序


- ### 生命周期

	- 应用生命周期

		应用生命周期就是整个小程序的周期，注册为 `APP({})`，
		`onlunch` 程序启动 --> `onshow` <==> `onhide`
	
	- 页面生命周期

		单个页面的周期，注册为 `Page({})`,  是在应用生命周期 `onshow` 加载之后开始创建的
		`onload` --> `onshow` --> `onready`
		还有一些其他的事件，`onpulldownrefresh(监听下拉动作)`, `onreachbottom(监听上拉触底)`,
		`onshareAPPMessage(转发)`
	

- ### 代码构成
	
	可以看到，在创建好的启动模板中，有四种不同的文件类型。
	以 `app` 开头的使用于整个应用中，类似于全局变量。


	- JSON配置：

		- 小程序配置 `app.json`
		
			`app.json` 是对当前小程序的全局配置，包括了小程序的所有页面路径、界面表现、网络超时时间、底部 `tab` 等。
		- 工具配置 `project.config.json`
		
			针对各自喜好做一些个性化配置，例如界面颜色、编译配置等等，当你换了另外一台电脑重新安装工
具的时候，你还要重新配置。

		- 页面配置 `page.json`
		
			`page.json` 其实用来表示 `pages/logs` 目录下的 `logs.json` 这类和小程序页面相关的配置。


	- wxml 渲染界面
	
		类似于 `html` ,不同于 `html` 的是，小程序把繁杂的标签归纳为了寥寥几种，常用的为 `view`,`text`,`button`,`image`等，另外还有开放组件
	`map`,`video`,`canvas`,`audio`等。大大提高了编写效率。
	页面中数据绑定使用的是{{}}，将变量填入双大括号中，当data中的该变量改变时，视图中的数据也会
	随之变动。一些控制语句，如if,eles。在小程序中的表达形式为 `wx:if`, `wx:for` 这样。

	- wxss 页面样式
			
		和css几乎没有差别，小程序新增了一个尺寸单位，`rpx` 使用该单位的话，在 `iPhone6` 下看到的样子会
	随着设备的变化自动调整，不需要开发者担心在不同尺寸，不同型号下的样式差异。
	

	
	- js 处理逻辑交互
	使用javascript 语言，可以支持es6语法，系统会在编译时将 `es6` 转化为 `es5`.
	它的主要作用是调用api,处理数据，响应操作，处理交互等。

- ### `api` 调用

	- 内部 `api` 调用，一般以 `wx.` 开头，如获取系统信息 `wx.getSysteminfo` 
	- 外部 `api`, 基本是通过 `wx.request` 来进行交互的。其中，url 在开发中可以不进行 https 的校验，但是
	在上线前需要使用有 `ssl` 证书的域名。一般购买域名都会送一年的证书使用权，到期后在一些域名服务网站上可以
	申请3~6个月不等的证书使用权。
	
- ### `openid` 与 `unionid`

	当我们调用用户信息时，只能得到用户昵称，头像，性别，城市等一些变动较大且不唯一的信息。这些显然是不能作为
	唯一标识符。这时，开发者就需要进行深度调用。
	1. `wx.login` 获取 `code` 从而得到用户信息：`encryptedData`，`iv` ,把这三个参数传给后台
	2. 后台通过 `requests.get(https://api.weixin.qq.com/wxa/getpaidunionid?access_token=ACCESS_TOKEN&openid=OPENID
)` 返回两个参数 `session_key` 和 `appid`
	3. 使用微信提供的解密文件将 `session_key` 和 `appid` 解密 ，得到深度用户信息。这时的信息中多出了 `openid` 和
	`unionid` .
	
	`openid` 用户的唯一标识符。将小程序看成一家店铺的话，`openid` 就是用户持有的会员卡，它表明用户的唯一性的同时，
	也不妨碍用户在其他店铺持有会员卡。值得一提的是，用户在不同小程序下的 `openid` 都是不同的，`openid` 仅仅是一串字符，
	所以用户不需要担心隐私信息的泄漏。
	
	`unionid` 。企业账号在得到深度用户信息时会多一个 `unionid` , `unionid` 可以绑定多个 `openid` .只要是同一家企业下的产品，
	`openid` 不相同，但是都为同一个 `unionid` 。通俗地说就是，不同的小程序（openid）是一个大公司（unionid）的各个分店，只要用户拥有相同的
	`unionid` 就可以在该公司旗下的所有分店中进行消费与体验。



- ### 支付功能

	支付功能是企业账号特有的一个服务。
	企业账号登录微信公众平台时会多一个微信支付，点击之后可以申请商户号或者绑定商户号，处理完之后登录微信
	商户号，拿到两个参数，`支付商户号` 和 `支付秘钥`。
	1. 用户点击支付，获取 `openid` 并传入后台。 
	2. 后台将 `appid`, `mch_id`,`随机字符串`, `签名信息`，`交易内容`,`商户订单号（一般为时间加随机数）`，`金额` 等参数通过
	拼接（https://api.mch.weixin.qq.com/pay/unifiedorder）发送到微信进行订单创建
	3. 微信返回一个预支付订单，开发者将里面的 `appid`， `prepay_id` 取出并添加一个随机字符串 `noceStr`和当前时间戳 `timestap`.
	将这4个参数通过 HASH 加密之后得到一个签名 `paysign` 
	4. 将刚才的 `时间戳`，`随机字符串`，`prepay_id` ，`加密类型` 写入支付方法 `wx.requestPayment` 中。微信将这些信息进行比对
	之后，成功的话便完成了支付。


## 编译预览 

点击预览，开发者就可以通过微信扫码查看在手机端的效果了。只有该项目的管理员和开发者才有权限扫码查看，
所以，如果想具有查看权，需要管理员在微信公众平台将对应用户添加为开发者。


## 真机调试
手机端渲染数据，开发端进行处理，两者通过网络发送数据。一般真机调试用来操作开发端不具有的能力，
如手机设备调用（蓝牙，wifi）,多指触摸，滑动等事件。

# 上线

- ### 提交审核：
	为了保证小程序的质量，以及符合相关的规范，小程序的发布是需要经过审核的。在开发者工具中上传了小程序代码之后，
登录 小程序管理后台 - 开发管理 - 开发版本 找到提交上传的版本。在开发版本的列表中，
点击 提交审核 按照页面提示，填写相关的信息，即可以将小程序提交审核。
需要注意的是，请开发者严格测试了版本之后，再提交审核， 过多的审核不通过，可能会影响后续的时间。

- ### 发布：
	审核通过之后，管理员的微信中会收到小程序通过审核的通知，此时登录 小程序管理后台 - 开发管理 - 审核版本。
中可以看到通过审核的版本。点击发布，既可发布小程序。

- ### 客服

	在界面添加一个 `button open-type='contact'` ，当用户点击该按钮时，会跳转到客服对话界面。
另一边，管理员需要在微信公众平台指定客服人员，客服人员关注微信小助手并选择要连接的小程序，选择之后便可以查看与
回复用户的反馈。

- ### 推送

	小程序无法像 `app` 一样对用户推送信息，但是，可以设置模板推送到微信内。

- ### 运营数据：
	有两种方式可以方便的看到小程序的 运营数据：
	1. 登录 小程序管理后台 - 数据分析，点击相应的 tab 可以看到相关的数据。
	2. 使用小程序数据助手，在微信中方便的查看运营数据

# 解决BUG

当小程序的使用人数超过100人之后，便可以申请极速审核，工作日中会在2小时之内完成审核，这样当有 `bug` 出现时，可以及时修复。
如果没有极速审核权益，问题又比较严重，可以在微信公众平台上选择版本回退，或者暂停服务。


